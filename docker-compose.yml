version: '3'
services:
  # Backend service (Flask)
  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
      - elasticsearch
    restart: on-failure
    environment:
      - MONGO_URI=mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@mongodb:27017/mydb
      - ELASTIC_URI=http://elasticsearch:9200
      - PYTHONUNBUFFERED=1

  # Frontend service (Next.js)
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development

  # MongoDB service
  mongodb:
    image: mongo:latest
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb:/var/lib/mongo/db
    environment:
      MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_ROOT_INITDBNAME: $MONGO_INITDB_ROOT_INITDBNAME
      MONGO_INITDB_HOSTNAME: $MONGO_INITDB_HOSTNAME

  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false 
    volumes:
      - ./elasticsearch.yml:/var/lib/elasticsearch/data

volumes:
  mongodb:
  elasticsearch:
